\documentclass[runningheads,a4paper]{article}

\usepackage[utf8]{inputenc}

\setcounter{tocdepth}{3}

\usepackage[english]{babel} 
\usepackage{graphicx}
\usepackage{grffile}
\usepackage{float}
\usepackage{multicol}
\usepackage{url}

\usepackage{titling}
\usepackage[hidelinks]{hyperref}
\setcounter{secnumdepth}{5}
%Margins
\usepackage[
margin=2cm,
includefoot
]{geometry}


\graphicspath{{img/}}

%Headers and Footers
\usepackage{fancyhdr}
\pagestyle{fancy}
\fancyhead{}
\fancyfoot{}
\fancyfoot[R]{\thepage}
\renewcommand{\headrulewidth}{0pt}
\renewcommand{\footrulewidth}{0pt}
\setlength\parindent{24pt}
\begin{document}

%Title Page
\begin{titlepage}
\begin{center}
\includegraphics[width=10cm]{UP.jpg}  \\
[1cm]
\line(1,0){300} \\
[0.3cm]
\textsc{\Large
NavUP \\
Architectural Requirements Specifications and Design \\
\hfill \break 01 March 2017
%University of Pretoria
}\\
[0.1cm]
\line(1,0){300} \\
[0.7cm]
\textsc{\Large
Team MatLab
} \\



\end{center}

\begin{center}
\begin{multicols}{2}
\textsc{\large\\
Frederick Ehlers\\ 
u11061112\\ 
}

\textsc{\large\\
Vignesh Iyer\\
u15031625\\ 
}

\textsc{\large\\
Stephanie Groutsch\\
u14293324\\ 
}

\textsc{\large\\
Neo Thokoa\\
u14163285\\
}

\columnbreak

\textsc{\large\\
Nokuthula Manana\\
u[...]\\
}

\textsc{\large\\
Jacobus Marais\\
u15188397\\
}

\textsc{\large\\
Heinrich Burgers\\
u15059538\\
}



\end{multicols}


\textsc{	\\ \href{https://github.com/FredJEhlers/Matlab}{GitHub}
\url{https://github.com/FredJEhlers/Matlab}}

\end{center}
\end{titlepage}
%\maketitle

\begingroup

\tableofcontents
\addcontentsline{toc}{section}{Table Of Contents}
\endgroup
\newpage


\section{External Interface Requirements}
\subsection {Navigation}
The navigation system communicates to three main entities. The network, the user and the user’s device. There needs to be an interface 
between each one of these entities to allow communication. 

User interface: 
The user interacts with the navigation system via the GUI. This GUI needs to be flexible enough to function on devices of various sizes 
and operating systems. The interface must allow the user to have some method of control over the navigation system like choosing 
destinations, waypoints, routes and change in these routes. 

The navigation system should also communicates to the user by showing information on the screen and through audio. This information
includes messages on the screen, the map, locations on the map and the possible routes on the map.

Other aspects of the user interface like font, icons and the more visual aspects will be decided upon when the GUI is created.

Device Interface:
In order to allow communication between the device and the navigation system an interface needs to be created. The navigation system 
needs access and information from the device in order to function. This includes access to its hardware like the screen, 
device memory, connection to Wi-Fi or the internet, the location system and to information like the device identity. 

The navigation system will be installed on the device along with the application. Being on the device itself will give it the needed
access, if permission was granted. 

Network Interface:
The navigation system functions best with communication between it and the network. This connection is established through the device’s 
connection. The connection can be to a WI-FI network or the mobile data network. 

The interface needs to facilitate exchange of information like location, identity, traffic, route information and aspects that might 
influence how navigation will take place. These aspects can be events, personal preference or personal 
information like disabilities. 

\section{Performance Requirements}

\section{Design Constraints}

\section{Software System Attributes}

\section{UML Diagrams for the Chosen Subsystems}
Design Patterns have been integrated and a discussion of their use are made below the respective diagrams.

\subsection {User}

\subsection {Navigation}

\subsection {Notifications}

\subsubsection{External Interface Requirements}
Name: Notification
Format: Text
Valid Range: Area surrounding the University of Pretoria
Timing: There is an upcoming event that relates to the user

System Interface:
Input: An administrator will add an event.
Output: The event will be added to the list of events.

Hardware Interface
Input: Server sends the data packets to the mobile application.
Output: The mobile application will vibrate or make a sound.

\subsubsection{Performance Requirements}
The system should be able to send out a large number of notifications without any delay (within 5 seconds).
\\
Multiple administrators should be able to add new notifications without failure.

\subsubsection{Design Constraints}

\subsubsection{Software System Attributes}
Flexibility: The system should allow for the addition of new notification means.
\\
Maintainability: The users’ contact information should be updated on a regular basis.
\\
Security: The users’ contact information should be kept secure in order to ensure that third parties do not have access to it.
\\
Auditability: The system should keep track of the sent and requested notifications.
\\
Integrability: The system should allow for future expansions.
\subsubsection{UML Diagrams}
\subsubsection{Technology Choices}

\subsection {Point of Interest}

\section{Technology Choices}

\section{References}
Kung, D.C. (2013) Object-oriented software engineering: An agile unified methodology. New York: McGraw Hill Higher Education.

\end{document}
